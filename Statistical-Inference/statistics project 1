{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## What is the true normal human body temperature? \n",
    "\n",
    "#### Background\n",
    "\n",
    "The mean normal body temperature was held to be 37$^{\\circ}$C or 98.6$^{\\circ}$F for more than 120 years since it was first conceptualized and reported by Carl Wunderlich in a famous 1868 book. In 1992, this value was revised to 36.8$^{\\circ}$C or 98.2$^{\\circ}$F. \n",
    "\n",
    "#### Exercise\n",
    "In this exercise, you will analyze a dataset of human body temperatures and employ the concepts of hypothesis testing, confidence intervals, and statistical significance.\n",
    "\n",
    "Answer the following questions **in this notebook below and submit to your Github account**. \n",
    "\n",
    "1.  Is the distribution of body temperatures normal? \n",
    "    - Remember that this is a condition for the CLT, and hence the statistical tests we are using, to apply. \n",
    "2.  Is the true population mean really 98.6 degrees F?\n",
    "    - Bring out the one sample hypothesis test! In this situation, is it approriate to apply a z-test or a t-test? How will the result be different?\n",
    "3.  At what temperature should we consider someone's temperature to be \"abnormal\"?\n",
    "    - Start by computing the margin of error and confidence interval.\n",
    "4.  Is there a significant difference between males and females in normal temperature?\n",
    "    - Set up and solve for a two sample hypothesis testing.\n",
    "\n",
    "You can include written notes in notebook cells using Markdown: \n",
    "   - In the control panel at the top, choose Cell > Cell Type > Markdown\n",
    "   - Markdown syntax: http://nestacms.com/docs/creating-content/markdown-cheat-sheet\n",
    "\n",
    "#### Resources\n",
    "\n",
    "+ Information and data sources: http://www.amstat.org/publications/jse/datasets/normtemp.txt, http://www.amstat.org/publications/jse/jse_data_archive.htm\n",
    "+ Markdown syntax: http://nestacms.com/docs/creating-content/markdown-cheat-sheet\n",
    "\n",
    "****"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import math\n",
    "from matplotlib import rcParams\n",
    "rcParams['xtick.direction'] = 'out'\n",
    "rcParams['ytick.direction'] = 'out'\n",
    "from scipy import stats"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "df = pd.read_csv('data/human_body_temperature.csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "1. Is the distribution of body temperatures normal"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x3d86fd0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# plot histogram of temperature\n",
    "temp = df.temperature\n",
    "plt.hist(temp,15, facecolor = 'red', alpha = 0.5)\n",
    "plt.title('Temperature Histogram')\n",
    "plt.xlabel('Temperature')\n",
    "plt.ylabel('Count')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Temperature is normal distribution, p =  0.258747986349\n"
     ]
    }
   ],
   "source": [
    "# normality test\n",
    "p = stats.mstats.normaltest(temp)\n",
    "if p.pvalue > 0.05:\n",
    "    print 'Temperature is normal distribution, p = ',p.pvalue\n",
    "else:\n",
    "    print 'Temperature is not normal distribution, p = ', p.pvalue"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "2.Is the true population mean really 98.6 degrees F?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "-5.45482329236\n",
      "2.41063204156e-07\n",
      "The true population mean is not equal to 98.6 F\n"
     ]
    }
   ],
   "source": [
    "# Null hypothesis: temp mean = 98.6 F\n",
    "# Alternative hypothesis: temp mean != 98.6 F\n",
    "# mean of temperature\n",
    "N,min_max,Tempmean, var,skew,kurt = stats.describe(temp)\n",
    "# number of samples, N >30, Z test\n",
    "N = len(temp)\n",
    "# one sample t test\n",
    "t,prob = stats.ttest_1samp(temp,98.6)\n",
    "print t\n",
    "print prob\n",
    "if prob<0.05:\n",
    "    print 'The true population mean is not equal to 98.6 F'\n",
    "else:\n",
    "    print 'The true population is euqal to 98.6F'"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "3.At what temperature should we consider someone's temperature to be \"abnormal\"?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Confidence interval of CI is  (98.203255215747902, 98.295206322713597)\n"
     ]
    }
   ],
   "source": [
    "# define confidence interval\n",
    "CI = 0.95\n",
    "alpha = 1-CI\n",
    "std = math.sqrt(var)\n",
    "interval = stats.norm.interval(alpha, loc = Tempmean, scale = std)\n",
    "print 'Confidence interval of CI is ', interval"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "4.Is there a significant difference between males and females in normal temperature?\n",
    "Set up and solve for a two sample hypothesis testing."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\nAeev5ydpdgnkAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0xb6022e8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# get temperature of man/woman\n",
    "MTemp = df.temperature[df.gender == 'M']\n",
    "FTemp = df.temperature[df.gender == 'F']\n",
    "bins = np.linspace(96,101,20)\n",
    "\n",
    "plt.hist(MTemp,bins, facecolor = 'c', label = 'M',alpha = 0.5)\n",
    "plt.hist(FTemp,bins, facecolor = 'r', label = 'F',alpha = 0.5)\n",
    "plt.legend(loc = 'upper right')\n",
    "plt.title('Temperature Histogram')\n",
    "plt.xlabel('Temperature')\n",
    "plt.ylabel('Count')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "-2.28543453817\n",
      "0.0239382641829\n",
      "There is a significant difference between males and females in normal temperature\n"
     ]
    }
   ],
   "source": [
    "\n",
    "# two-sample t test\n",
    "t,p = stats.ttest_ind(MTemp,FTemp,equal_var = False)\n",
    "print t\n",
    "print p\n",
    "if p <0.05:\n",
    "    print 'There is a significant difference between males and females in normal temperature'\n",
    "else:\n",
    "    print 'No significatn different between males and females in normal temperture'"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.11"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
